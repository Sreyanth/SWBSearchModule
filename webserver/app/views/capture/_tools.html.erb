<div data-role="page" id="tools" data-theme="a">
<div data-theme="a" data-role="header">
	<h3 style="text-align:left;margin-left:15px;">Tools</h3>
</div>
<div data-role="content" class="content" style="padding: 15px">

	<div data-role="fieldcontain">
		<fieldset data-role="controlgroup">
			<label for="geotag-toggle">Geotag</label>
			<input data-theme="a" type="checkbox" name="geotag-toggle" id="geotag-toggle" type="checkbox" />
			<label for="rgb-toggle">RGB</label>
			<input data-theme="a" type="checkbox" name="rgb-toggle" id="rgb-toggle" onChange="$W.toggle_mode()" />
			<label for="rotate-toggle">Rotate</label>
			<input onChange="$W.rotated = !$W.rotated" data-theme="a" type="checkbox" name="rotate-toggle" id="rotate-toggle" />

		</fieldset>
	</div>
	<div data-role="collapsible-set" style="padding:8px;">
		<div data-role="collapsible" data-collapsed="true" id="analysis_buttons">
			<h3>Analysis</h3>
			<a data-role="button" data-theme="a" onClick="$W.mark()">Mark wavelength</a>
			<a data-role="button" data-theme="a" onClick="$W.show_combined()">Test combined readout (beta)</a>
			<a data-role="button" data-theme="a" href="#search">Compare</a>
			<a data-role="button" data-theme="a" href="#macros">Macros</a>
			<a data-role="button" data-theme="a" onClick="$W.flipped = !$W.flipped">Flip video horizontally</a>
		</div>
	</div>
	
	<div id="matches" style="min-height:120px; min-height:auto; min-height:120px; display:none">
	</div>
	
	<p id="countdown"></p>
	
	<div data-role="fieldcontain" id="start_timer"> 
		<a data-role="button" data-theme="a" data-icon="search" onClick="start_timer()">Start Live Matching!</a>
	</div>
	
	<script type="text/javascript">
		
	var limit = 1 // So that it directly displays results when the button is clicked
	
	var Timer =0

	function start_timer() {
		
		$('#start_timer').click(function() {
			$(this).hide('slow', function(){
			});
		});
		$('#matches').show()
		Timer = setInterval("beginrefresh()",1000)
	}

	function beginrefresh(){
		if (limit==1) {
			
			limit = 10
			cols = []
			bin_data = []
			types = ['r', 'g', 'b', 'a']
		
			for (var k = 64; k>0; k--) {
				$.each(types, function(i, type) {
					bin_data[type + (k*10)] = []
				})	
			}

			$.each($W.full_data,function(i,line) {
				var bins = get_bin(i)
				$.each(bins,function(j,bin) {
					$.each(types, function(t, type) {
						bin_data[type + bin].push(line[t])
					})
				})
			})

			for (k = 64; k>0; k--) {
				$.each(types, function(i, type) {
					cols.push('"'+type+(k*10) +'":'+ Math.floor(average(bin_data[type + (k*10)])))
				})	
			}
			
			$("#matches").html("<p><img src='/images/spinner-transparent.gif' /></p>");
			$.ajax({
				url: "/match/livesearch/",
				type: "POST",
				data: {data: cols.join(','), calibration: "Not calibrated"},
				success: function(result) {
					$("#matches").html(result);
				}
			})
			$("#countdown").hide('slow', function(){})
		}

		else {
			limit-=1
			if (limit <= 5)
			$("#countdown").html("Refreshing in "+limit+" secs (<a href='#' onClick='stop_timer()'>Stop</a>)");
			if(limit==5) $("#countdown").show('slow', function(){
				});
		}
	}

	function get_bin(wavelength) {
		var diff = wavelength % 10
		var base = wavelength - diff
		bins = []  
	 
	    if((base < 10) || (base > 1490)) {
			return bins
		}

		if (diff > 6) { //This is in the next bin
	      	if ((base + 10) > 1490)
			return bins

	      	else {
				bins.push(base+10)
				return bins
			}
		}

	    else if (diff < 4) { // This is in this bin
	    	bins.push(base)
			return bins
		}

		else { // This is in both the present and next bin
			if ((base + 10) > 1490) {
				bins.push(base)
				return bins
			}
		
			else {
				bins.push(base)
				bins.push(base+10)
				return bins
			}
		}
	}

	function average(a) {
		sum = 0
		count = 0
		$.each(a,function(i,number) {
			sum+= number
			count++
		})
		if(count>0) return sum/count
		else return 0
	}

	function stop_timer() {
		clearInterval(Timer)
		$('#countdown').hide('slow', function(){
			});
		$('#start_timer').show('slow', function(){
			});
		$('#matches').hide()
	}
	</script>

	<p><a href="https://github.com/jywarren/spectral-workbench">SpectralWorkbench is free software</a> by <a href="http://publiclab.org">Public Lab</a> Your input is invaluable! See <a href="https://github.com/jywarren/spectral-workbench/issues">Github issues</a> to help design/refine/debug new features.<p>

	<a onClick="setTimeout(function(){$('#samplerow-slider').val($W.sample_start_row)},500)" data-icon="gear" data-role="button" data-theme="a" href="#configure" data-panel="main">Configure</a>
	<% if !logged_in? %><a data-role="button" data-theme="b" href="#login" data-panel="main">Log in</a><% end %>

	<p>This interface works on <a href="https://www.google.com/intl/en/chrome/browser/">Chrome 21+</a>, Opera, and any browser which supports the HTML5 getUserMedia() call. <a href="https://play.google.com/store/apps/details?id=com.opera.browser">Opera Mobile</a> for Android also works! Don't see anything? <a href="http://publiclab.org/wiki/spectral-workbench-web-video">Check if your browser is supported</a></p>

</div>

<div id="notify"></div>
	<!--<a data-role="button" data-theme="a" href="javascript:void()" onClick="">Calibrate</a>-->
</div>
